#!/bin/sh
''':'
if which ipython 2>&1 > /dev/null; then
   exec ipython "$0" "$@"
else
   exec python "$0" "$@"
fi
'''

import os, sys, tempfile, glob

if sys.version_info[0] == 2:
    from urllib2 import URLError
    input = raw_input
else:
    from urllib.error import URLError

from socket import gaierror
from fronter import NewToolInterrupt
from fronter.plugins import Color
from fronter.client import Fronter

c = Color()
col = c.colored


def loop(instr):
    def magic():
        while True:
            try:
                instr()
            except KeyError:
                print(col(' !! invalid command', c.ERR))
            except IndexError:
                print(col(' !! index out of range', c.ERR))
            except (ValueError, TypeError):
                print(col(' !! invalid argument', c.ERR))
            except (URLError, gaierror):
                print(col(' ?? connection lost', c.ERR))
            except EOFError:
                print('')
                break
            except KeyboardInterrupt:
                print('')
            except NewToolInterrupt as ex:
                print('')
                shellify(ex.tool)
                print('> exiting ' + ex.tool.str())
                ex.tool.clean_exit()

    return magic


def shellify(tool):

    if not tool:
        return
    tool.print_commands()

    @loop
    def do():
        command = input('> ').strip()
        if not command:
            return

        args = []
        try:
            command, arg = command.split(' ', 1)
            args.append(arg)
        except:
            pass

        tool.commands[command](*args)

    do()


client = None

def start_shell():

    try:
        global client
        client = Fronter()
    except ValueError:
        print(col('Wrong username/password', c.ERR))
        sys.exit(0)
    except (KeyboardInterrupt, EOFError):
        print('\n> exit')
        sys.exit(0)
    except (URLError, gaierror):
        print(col('No internet connection', c.ERR))
        sys.exit(0)

    client.print_notifications()

    @loop
    def select_room():
        print(col('\nreturn <Ctrl-D>', c.HL))
        client.print_rooms()

        idx = int(input('> select a room <index> : ').strip())
        if not client.select_room(idx):
            return

        @loop
        def select_tool():
            print(col('\nreturn <Ctrl-D>', c.HL))
            client.print_tools()

            idx = int(input('> select a tool <index> : ').strip())
            tool = client.select_tool(idx)
            print('')

            shellify(tool)
            tool.clean_exit()

        select_tool()

    select_room()

    print('> exit')            

    for tmp in glob.glob(os.path.join(tempfile.gettempdir(), 'fronter_*')):
        os.unlink(tmp)

if __name__ == '__main__':
    start_shell()
